---
title: "week4-discussion"
author: "Stephen Carroll"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(spData)
library(spDataLarge)
library(sf)
library(stars)
library(terra)
```

```{r}
dem <- terra::rast(system.file("raster/dem.tif", package = "spDataLarge"))
landsat <- terra::rast(system.file("raster/landsat.tif", package = "spDataLarge"))
srtm <- terra::rast(system.file("raster/srtm.tif", package = "spDataLarge"))
peru <- stars::read_stars(here::here("data", "week4-discussion", "PER_elv.tif"))
peru <- rast(peru)
```


# 2.

1.
```{r}
hist(dem)
```

```{r}
boxplot(dem)
```

2.
```{r}
rcl <- matrix(c(-Inf, 300, 0, # values -Inf to 300 = 0
              300, 500, 1, # values 300 to 500 = 1
              500, Inf, 2), # values 500 to Inf = 2            
              ncol = 3, byrow = TRUE)

# apply the matrix to reclassify the raster, making all cells 0 or 1 or 2
dem_rcl <- terra::classify(dem, rcl = rcl)

# assign labels to the numerical categories
levels(dem_rcl) <- tibble::tibble(id = 0:2, 
                                  cats = c("low", "medium", "high"))

# calculate mean elevation for each category using original DEM values
elevation_mean <- terra::zonal(dem, dem_rcl, fun = "mean")
elevation_mean
```

3.

```{r}
ndwi_fun <- function(green, nir){
    (green - nir)/(green + nir)
}

ndvi_fun <- function(nir, red){
  (nir - red)/(nir + red)
}

ndwi_rast <- terra::lapp(landsat[[c(2, 4)]],
                         fun = ndwi_fun)
plot(ndwi_rast,
     main = "Zion National Park NDWI")
```

```{r}
ndvi_rast <- terra::lapp(landsat[[c(4, 3)]],
                         fun = ndvi_fun)

# stack rasters
combine <- c(ndvi_rast, ndwi_rast)

plot(combine, main = c("NDVI", "NDWI"))
```


```{r}
# calculate the correlation between raster layers 
terra::layerCor(combine, fun = cor)
```

4.

```{r}
# Aggregate by a factor of 20 to reduce resolution and create new raster
peru_agg <- terra::aggregate(peru, fact = 20)
plot(peru_agg)
```

```{r}
# Create mask of ocean (NA values)
water_mask <- is.na(peru_agg) # returns TRUE value for NA

water_mask
# Set all FALSE values to NA
water_mask[water_mask == 0] <- NA
plot(water_mask)
```

```{r}
# Find distance from each cell to ocean/coastline (default is unit = "m")
distance_to_coast <- terra::distance(water_mask)
```


```{r}
# Convert from meters to kilometers 
distance_to_coast_km <- distance_to_coast/1000

plot(distance_to_coast_km, main = "Distance to the coast (km)")
```

# Change resolution of `srtm`

```{r}
plot(srtm)
```

```{r}
rast_template <- terra::rast(terra::ext(srtm), res = 0.01)

srtm_resampl1 <- terra::resample(srtm, y = rast_template, method = "bilinear")
srtm_resampl2 <- terra::resample(srtm, y = rast_template, method = "near")
srtm_resampl3 <- terra::resample(srtm, y = rast_template, method = "cubic")
srtm_resampl4 <- terra::resample(srtm, y = rast_template, method = "cubicspline")
srtm_resampl5 <- terra::resample(srtm, y = rast_template, method = "lanczos")

srtm_resampl_all <- c(srtm_resampl1, srtm_resampl2, srtm_resampl3, srtm_resampl4, srtm_resampl5)
labs <- c("Bilinear", "Near", "Cubic", "Cubic Spline", "Lanczos")
plot(srtm_resampl_all, main = labs)

```


